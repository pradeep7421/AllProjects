<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">
    <module name="NewlineAtEndOfFile" />
    <module name="FileLength" />
    <module name="FileTabCharacter" />

    <!-- Suppression file -->
    <module name="SuppressionFilter">
        <property name="file" value="${config_loc}/checkstyle-suppressions.xml" />
    </module>

    <!-- Trailing spaces -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$" />
        <property name="message" value="Line has trailing spaces." />
    </module>

    <module name="LineLength">
        <property name="max" value="150" />
        <property name="ignorePattern" value="^import\b" />
    </module>

    <module name="TreeWalker">
        <!--        <property name="cacheFile" value="${checkstyle.cache.file}" />-->

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!--module name="JavadocMethod" /-->
        <!--module name="JavadocType" /-->
        <!--module name="JavadocVariable" /-->
        <!--<module name="JavadocStyle" />-->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="LocalFinalVariableName">
            <property name="format" value="^([a-z][a-zA-Z0-9]*|[A-Z][_A-Z0-9]*)$" />
        </module>
        <module name="LocalVariableName" />
        <module name="MemberName">
            <property name="format" value="^([a-z][a-zA-Z0-9]*|[A-Z][_A-Z0-9]*)$" />
        </module>
        <module name="MethodName" />
        <module name="PackageName" />
        <module name="ParameterName" />
        <module name="StaticVariableName" />
        <module name="TypeName" />

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport" />
        <module name="IllegalImport">
            <property name="illegalPkgs"
                      value="junit.framework,org.apache.commons.logging,org.codehaus.jackson,sun" />
        </module>
        <module name="ImportOrder">
            <property name="option" value="bottom" />
            <property name="separated" value="true" />
        </module>
        <module name="RedundantImport" />
        <module name="UnusedImports" />

        <!-- Indentation -->
        <module name="CommentsIndentation"/>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="4"/>
            <property name="arrayInitIndent" value="4"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="forceStrictCondition" value="false"/>
        </module>
        <module name="MethodLength" />
        <module name="ParameterNumber">
            <property name="max" value="20" />
            <property name="tokens" value="METHOD_DEF" />
        </module>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="GenericWhitespace" />
        <module name="EmptyForIteratorPad" />
        <module name="MethodParamPad" />
        <module name="NoWhitespaceAfter" />
        <module name="NoWhitespaceBefore" />
        <module name="OperatorWrap" />
        <module name="ParenPad" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter" />
        <module name="WhitespaceAround">
            <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,
          BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,
          LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,
          LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,
          NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,
          TYPE_EXTENSION_AND" />
            <property name="allowEmptyConstructors" value="true" />
            <property name="allowEmptyMethods" value="true" />
        </module>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks" />
        <module name="NeedBraces">
            <!-- If we include LITERAL_IF, it fails on generated equals() implementations. -->
            <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE" />
        </module>
        <module name="RightCurly" />

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!--module name="AvoidInlineConditionals" /-->
        <module name="CovariantEquals" />
        <module name="EmptyStatement" />
        <module name="EqualsAvoidNull" />
        <module name="EqualsHashCode" />
        <!--module name="HiddenField" /-->
        <module name="IllegalInstantiation" />
        <module name="InnerAssignment" />
        <module name="MissingSwitchDefault" />
        <!-- Commenting out RedundantThrows until we can properly configure Checkstyle's classpath.
             Currently, we're getting exceptions like this:
                 Unable to get class information for ServletException. -->
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!--module name="DesignForExtension" /-->
        <module name="HideUtilityClassConstructor" />
        <module name="InterfaceIsType" />
        <!--module name="VisibilityModifier" /-->

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle" />
        <!--module name="FinalParameters" /-->
        <module name="UpperEll" />
    </module>
</module>
